# # Use Node.js 18-alpine for lightweight builds
# FROM node:18-alpine

# # Install necessary dependencies for Python, Selenium, and Chrome
# RUN apk add --no-cache python3 py3-pip libxml2-dev libxslt-dev zlib-dev libffi-dev openssl-dev bash make g++ linux-headers \
#     chromium \
#     chromium-chromedriver \
#     openjdk11-jre  # Java runtime for Selenium Server

# # Download and install Selenium Server (acts as Selenium Hub)
# RUN mkdir -p /opt/selenium && wget https://github.com/SeleniumHQ/selenium/releases/download/selenium-4.10.0/selenium-server-4.10.0.jar -P /opt/selenium/

# # Create a Python virtual environment
# RUN python3 -m venv /opt/venv
# ENV PATH="/opt/venv/bin:$PATH"

# # Set the working directory to /app/express for the backend
# WORKDIR /app/express

# # ---------------- PYTHON SETUP ----------------
# # Copy Python requirements and install dependencies
# COPY python_scripts/requirements.txt ./python_scripts/requirements.txt

# # Install Python dependencies in the virtual environment
# RUN /opt/venv/bin/pip install --no-cache-dir -r ./python_scripts/requirements.txt

# # Install additional Python libraries
# RUN /opt/venv/bin/pip install beautifulsoup4 selenium requests

# # Copy Python scripts
# COPY python_scripts/ ./python_scripts/

# # ---------------- EXPRESS SETUP ----------------
# # Copy Express package.json and install dependencies
# COPY express/package*.json ./
# RUN npm install

# # Copy the rest of the Express project files
# COPY express/ .

# # Install 'concurrently' to run multiple services
# RUN npm install -g concurrently

# # Expose necessary ports for Express and Selenium Hub
# EXPOSE 3002 4444

# # Use concurrently to run both Selenium Hub and the Express server
# CMD ["npx", "concurrently", "\"java -jar /opt/selenium/selenium-server-4.10.0.jar hub\"", "\"node /app/express/server.js\""]
