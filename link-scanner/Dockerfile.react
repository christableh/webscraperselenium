# # # Use Node.js 18-alpine for lightweight React builds
# # FROM node:18-alpine AS build

# # # Set the working directory to /app/react for the React frontend
# # WORKDIR /app/react

# # # Copy React package.json and install dependencies
# # COPY react/package*.json ./
# # RUN npm install

# # # Copy the entire React app including public/ and src/ directories
# # COPY react/ ./

# # # Build React app for production (creates the build folder)
# # RUN npm run build

# # # # Install serve to serve the React build
# # # RUN npm install -g serve

# # # # Expose port for the React app
# # # EXPOSE 3001

# # # # Serve the React app with a base URL of /app on port 3001
# # # CMD ["serve", "-s", "build", "--listen", "3001"]

# # Stage 1: Build React app
# FROM node:18-alpine AS build

# WORKDIR /app/react

# COPY react/package*.json ./
# RUN npm install

# COPY react/ ./
# RUN npm run build

# # Stage 2: Serve with Nginx
# FROM nginx:alpine

# # Copy custom Nginx configuration
# COPY nginx.conf /etc/nginx/conf.d/default.conf

# # Copy React build files to Nginx's default html directory
# COPY --from=build /app/react/build /usr/share/nginx/html

# # Expose port 80 (standard HTTP)
# EXPOSE 80

# # Start Nginx server
# CMD ["nginx", "-g", "daemon off;"]
